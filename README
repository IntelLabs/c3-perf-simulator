This is an experimental performance simulator for Cryptographic Capability Computing (C3).

If not copying ZIPs of other deliverables, make sure to clone this repository with --recurse-submodules - otherwise, many tests will not build.

Otherwise, when assembling the simulator from downloaded ZIP files, do the following:

1. Unzip `harden-p1-d1-c3-simulator.zip` and copy its root directory's contents to `c3-simulator/` in this directory.
2. Follow the instructions in `c3-simulator/README.adoc` to assemble additional subdirectories.
3. In `c3-simulator/malloc/cc_globals.h`, comment out lines 23-25 (a block of three defines including CC_INTEGRITY_ENABLE).
4. Copy ascon_* and bipbip* from c3-simulator/crypto to src/crypto (i.e., the gem5 src directory).

To build everything and run tests, cd into tests/c3_tests and run `make test`.

### Spectre v1 demo build instructions

Make sure that harden-p1-d1-c3-simulator.zip is in the root directory of this repo.
Build the gem5 simulator and custom glibc. Then, still from within tests/c3_tests, run `spectre_build_and_run.sh`. This will both build and run the Safeside demo which has been modified to use C3.

In particular, this demo shows what happens to a Spectre attack if public data and private data have overlapping allocations: only garbled secret data is retrieved.

### Testing C3 against SLH

To run a benchmark using Speculative Load Hardening (SLH), compile it using clang with the flag `-mspeculative-load-hardening`. To explicitly disable SLH, compile the benchmark with `-mno-speculative-load-hardening`.

---

The contents of this repository and linked repositories are solely for research
purposes and may contain software with vulnerabilities, such as outdated
libraries. Do not use in production.

This material is based upon work supported by the Naval Information Warfare 
Center Pacific and the Defense Advanced Research Project Agency under Prototype 
Other Transaction Agreement No. N66001-23-9-4004. Any opinions, findings and 
conclusions or recommendations expressed in this material are those of the 
author(s) and do not necessarily reflect the views of the Naval Information 
Warfare Center Pacific or the Defense Advanced Research Project Agency.
---

This is the gem5 simulator.

The main website can be found at http://www.gem5.org

A good starting point is http://www.gem5.org/about, and for
more information about building the simulator and getting started
please see http://www.gem5.org/documentation and
http://www.gem5.org/documentation/learning_gem5/introduction.

To build gem5, you will need the following software: g++ or clang,
Python (gem5 links in the Python interpreter), SCons, zlib, m4, and lastly
protobuf if you want trace capture and playback support. Please see
http://www.gem5.org/documentation/general_docs/building for more details
concerning the minimum versions of these tools.

Once you have all dependencies resolved, type 'scons
build/<CONFIG>/gem5.opt' where CONFIG is one of the options in build_opts like
ARM, NULL, MIPS, POWER, SPARC, X86, Garnet_standalone, etc. This will build an
optimized version of the gem5 binary (gem5.opt) with the the specified
configuration. See http://www.gem5.org/documentation/general_docs/building for
more details and options.

The main source tree includes these subdirectories:
   - build_opts: pre-made default configurations for gem5
   - build_tools: tools used internally by gem5's build process.
   - configs: example simulation configuration scripts
   - ext: less-common external packages needed to build gem5
   - include: include files for use in other programs
   - site_scons: modular components of the build system
   - src: source code of the gem5 simulator
   - system: source for some optional system software for simulated systems
   - tests: regression tests
   - util: useful utility programs and files

To run full-system simulations, you may need compiled system firmware, kernel
binaries and one or more disk images, depending on gem5's configuration and
what type of workload you're trying to run. Many of those resources can be
downloaded from http://resources.gem5.org, and/or from the git repository here:
https://gem5.googlesource.com/public/gem5-resources/

If you have questions, please send mail to gem5-users@gem5.org

Enjoy using gem5 and please share your modifications and extensions.
